package model.uvo;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 19 19:15:53 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AKUserFormUVORowImpl extends ViewRowImpl {
    public static final int ENTITY_AKUSERSEO = 0;
    public static final int ENTITY_AKADDRESSEO = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        UserId,
        UName,
        UPassword,
        Gender,
        FirstName,
        MiddleName,
        LastName,
        UserRefId,
        Email,
        StartDate,
        EndDate,
        AddressId1,
        AddressId,
        AddressLine1,
        AddressLine2,
        AddressLine3,
        GenderUVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int USERID = AttributesEnum.UserId.index();
    public static final int UNAME = AttributesEnum.UName.index();
    public static final int UPASSWORD = AttributesEnum.UPassword.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int USERREFID = AttributesEnum.UserRefId.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int ADDRESSID1 = AttributesEnum.AddressId1.index();
    public static final int ADDRESSID = AttributesEnum.AddressId.index();
    public static final int ADDRESSLINE1 = AttributesEnum.AddressLine1.index();
    public static final int ADDRESSLINE2 = AttributesEnum.AddressLine2.index();
    public static final int ADDRESSLINE3 = AttributesEnum.AddressLine3.index();
    public static final int GENDERUVO1 = AttributesEnum.GenderUVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AKUserFormUVORowImpl() {
    }

    /**
     * Gets AKUsersEO entity object.
     * @return the AKUsersEO
     */
    public EntityImpl getAKUsersEO() {
        return (EntityImpl) getEntity(ENTITY_AKUSERSEO);
    }

    /**
     * Gets AKAddressEO entity object.
     * @return the AKAddressEO
     */
    public EntityImpl getAKAddressEO() {
        return (EntityImpl) getEntity(ENTITY_AKADDRESSEO);
    }

    /**
     * Gets the attribute value for USER_ID using the alias name UserId.
     * @return the USER_ID
     */
    public DBSequence getUserId() {
        return (DBSequence) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID using the alias name UserId.
     * @param value value to set the USER_ID
     */
    public void setUserId(DBSequence value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for U_NAME using the alias name UName.
     * @return the U_NAME
     */
    public String getUName() {
        return (String) getAttributeInternal(UNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for U_NAME using the alias name UName.
     * @param value value to set the U_NAME
     */
    public void setUName(String value) {
        setAttributeInternal(UNAME, value);
    }

    /**
     * Gets the attribute value for U_PASSWORD using the alias name UPassword.
     * @return the U_PASSWORD
     */
    public String getUPassword() {
        return (String) getAttributeInternal(UPASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for U_PASSWORD using the alias name UPassword.
     * @param value value to set the U_PASSWORD
     */
    public void setUPassword(String value) {
        setAttributeInternal(UPASSWORD, value);
    }

    /**
     * Gets the attribute value for GENDER using the alias name Gender.
     * @return the GENDER
     */
    public Long getGender() {
        return (Long) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for GENDER using the alias name Gender.
     * @param value value to set the GENDER
     */
    public void setGender(Long value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @return the MIDDLE_NAME
     */
    public String getMiddleName() {
        return (String) getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @param value value to set the MIDDLE_NAME
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
        if(getFirstName().length()<4) {
            if(getLastName().length()<4){
                setAttributeInternal(USERREFID,getFirstName()+"_"+getLastName());
            }
            else{
                setAttributeInternal(USERREFID,getFirstName()+"_"+getLastName().substring(0, 4));
            }
        }
        else{
            if(getLastName().length()<4){
                setAttributeInternal(USERREFID,getFirstName().substring(0, 4)+"_"+getLastName());
            }
            else{
                setAttributeInternal(USERREFID,getFirstName().substring(0, 4)+"_"+getLastName().substring(0, 4));
            }
        }
    }

    /**
     * Gets the attribute value for USER_REF_ID using the alias name UserRefId.
     * @return the USER_REF_ID
     */
    public String getUserRefId() {
        return (String) getAttributeInternal(USERREFID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_REF_ID using the alias name UserRefId.
     * @param value value to set the USER_REF_ID
     */
    public void setUserRefId(String value) {
        
        setAttributeInternal(USERREFID,value);
        
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for START_DATE using the alias name StartDate.
     * @return the START_DATE
     */
    public Timestamp getStartDate() {
        return (Timestamp) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate.
     * @param value value to set the START_DATE
     */
    public void setStartDate(Timestamp value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for END_DATE using the alias name EndDate.
     * @return the END_DATE
     */
    public Timestamp getEndDate() {
        return (Timestamp) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DATE using the alias name EndDate.
     * @param value value to set the END_DATE
     */
    public void setEndDate(Timestamp value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for ADDRESS_ID using the alias name AddressId.
     * @return the ADDRESS_ID
     */
    public DBSequence getAddressId() {
        return (DBSequence) getAttributeInternal(ADDRESSID);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_ID using the alias name AddressId.
     * @param value value to set the ADDRESS_ID
     */
    public void setAddressId(DBSequence value) {
        setAttributeInternal(ADDRESSID, value);
        
    }

    /**
     * Gets the attribute value for ADDRESS_LINE1 using the alias name AddressLine1.
     * @return the ADDRESS_LINE1
     */
    public String getAddressLine1() {
        return (String) getAttributeInternal(ADDRESSLINE1);
       
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_LINE1 using the alias name AddressLine1.
     * @param value value to set the ADDRESS_LINE1
     */
    public void setAddressLine1(String value) {
        setAttributeInternal(ADDRESSLINE1, value);
        
    }

    /**
     * Gets the attribute value for ADDRESS_LINE2 using the alias name AddressLine2.
     * @return the ADDRESS_LINE2
     */
    public String getAddressLine2() {
        return (String) getAttributeInternal(ADDRESSLINE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_LINE2 using the alias name AddressLine2.
     * @param value value to set the ADDRESS_LINE2
     */
    public void setAddressLine2(String value) {
        setAttributeInternal(ADDRESSLINE2, value);
    }

    /**
     * Gets the attribute value for ADDRESS_LINE3 using the alias name AddressLine3.
     * @return the ADDRESS_LINE3
     */
    public String getAddressLine3() {
        return (String) getAttributeInternal(ADDRESSLINE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_LINE3 using the alias name AddressLine3.
     * @param value value to set the ADDRESS_LINE3
     */
    public void setAddressLine3(String value) {
        setAttributeInternal(ADDRESSLINE3, value);
    }

    /**
     * Gets the attribute value for ADDRESS_ID using the alias name AddressId1.
     * @return the ADDRESS_ID
     */
    public Long getAddressId1() {
        return (Long) getAttributeInternal(ADDRESSID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_ID using the alias name AddressId1.
     * @param value value to set the ADDRESS_ID
     */
    public void setAddressId1(Long value) {
        setAttributeInternal(ADDRESSID1, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GenderUVO1.
     */
    public RowSet getGenderUVO1() {
        return (RowSet) getAttributeInternal(GENDERUVO1);
    }
}

